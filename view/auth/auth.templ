package auth

import "go-auth-template/view/layout"

templ Login() {
	@layout.App(false) {
		<div class="hero min-h-screen bg-base-200">
			<div class="hero-content flex-col lg:flex-row-reverse">
				<div class="text-center lg:text-left ml-6">
					<h1 class="text-5xl font-bold">Login now!</h1>
					<p class="py-6">Provident cupiditate voluptatem et in. Quaerat fugiat ut assumenda excepturi exercitationem quasi. In deleniti eaque aut repudiandae et a id nisi.</p>
				</div>
				<div class="card shrink-0 w-full max-w-sm shadow-2xl bg-base-100">
					@LoginForm(LoginParams{}, LoginErrors{})
				</div>
			</div>
		</div>
	}
}

type LoginErrors struct {
	InvalidCredentials string
}

type LoginParams struct {
	Email    string
	Password string
}

templ LoginForm(params LoginParams, errors LoginErrors) {
	<form
		hx-post="/login"
		hx-swap="outerHTML"
		class="card-body"
	>
		<div class="form-control">
			<label class="label">
				<span class="label-text">Email</span>
			</label>
			<input type="email" value={ params.Email } name="email" placeholder="email" class="input input-bordered" required/>
		</div>
		<div class="form-control">
			<label class="label">
				<span class="label-text">Contraseña</span>
			</label>
			<input type="password" name="password" placeholder="contraseña" class="input input-bordered" required/>
			<label class="label">
				<a href="#" class="label-text-alt link link-hover">Olvidaste tu contraseña?</a>
			</label>
		</div>
		<div class="form-control mt-6">
			if len(errors.InvalidCredentials) > 0 {
				<span class="text-error text-sm">{ errors.InvalidCredentials }</span>
			}
			<button id="login-btn" type="submit" class="btn btn-primary">
				Ingresa
				<span id="spinner" class="loading loading-spinner hidden loading-xs"></span>
			</button>
			<div class="divider"></div>
			<a href="/login/provider/google" id="login-btn-google" class="btn btn-secondary">
				<i class="fa-brands fa-google"></i> Inicia sesión con Google
				<span id="spinner-google" class="loading loading-spinner hidden loading-xs"></span>
			</a>
		</div>
	</form>
	<script>
		document.getElementById('login-btn').addEventListener('click', function() {
			var spinner = document.getElementById('spinner');
			spinner.style.display = 'inline-block';
			});
		document.getElementById('login-btn-google').addEventListener('click', function() {
		var spinner = document.getElementById('spinner-google');
		spinner.style.display = 'inline-block';
		});
	</script>
}

type SignupParams struct {
	Email           string
	Password        string
	ConfirmPassword string
}

type SignupErrors struct {
	InvalidEmail     string
	InvalidPassword  string
	PasswordMismatch string
}

templ Signup() {
	@layout.App(false) {
		<div class="hero min-h-screen bg-base-200">
			<div class="hero-content flex-col lg:flex-row-reverse">
				<div class="card shrink-0 w-full max-w-sm shadow-2xl bg-base-100">
					@SignupForm(SignupParams{}, SignupErrors{})
				</div>
			</div>
		</div>
	}
}

templ SignupForm(params SignupParams, errors SignupErrors) {
	<form
		hx-post="/signup"
		hx-swap="outerHTML"
		class="card-body"
	>
		<div class="form-control">
			<label class="label">
				<span class="label-text">Email</span>
			</label>
			<input type="email" value={ params.Email } name="email" placeholder="email" class="input input-bordered" required/>
			if len(errors.InvalidEmail) > 0 {
				<span class="text-error text-sm">{ errors.InvalidEmail }</span>
			}
		</div>
		<div class="form-control">
			<label class="label">
				<span class="label-text">Contraseña</span>
			</label>
			<input type="password" value={ params.Password } name="password" placeholder="contraseña" class="input input-bordered" required/>
			if len(errors.InvalidPassword) > 0 {
				<span class="text-error text-sm">{ errors.InvalidPassword }</span>
			}
		</div>
		<div class="form-control">
			<label class="label">
				<span class="label-text">Repetir Contraseña</span>
			</label>
			<input type="password" name="confirmPassword" placeholder="contraseña" class="input input-bordered" required/>
			if len(errors.PasswordMismatch) > 0 {
				<span class="text-error text-sm">{ errors.PasswordMismatch }</span>
			}
		</div>
		<div class="form-control mt-6">
			<button id="login-btn" type="submit" class="btn btn-primary">
				Registrarse
				<span id="spinner" class="loading loading-spinner hidden loading-xs"></span>
			</button>
		</div>
	</form>
	<script>
		document.getElementById('login-btn').addEventListener('click', function() {
			var spinner = document.getElementById('spinner');
			spinner.style.display = 'inline-block';
			});
	</script>
}

templ SignupSuccess(email string) {
	@layout.App(false) {
		<div class="card-body">
			<div class=" text-center">
				<div class="">
					<h1 class="text-5xl font-bold">Bienvenido!</h1>
					<p class="py-6">Un correo de confirmación ha sido enviado a la siguiente dirección <span class="font-semibold text-success">{ email }</span></p>
					<a href="/">
						<button class="btn btn-primary">Volver al Inicio</button>
					</a>
				</div>
			</div>
		</div>
	}
}

templ CallbackScript() {
	<script>
		var url = window.location.href;
		var newUrl = url.replace("#", "?");
		window.location = newUrl;
	</script>
}
